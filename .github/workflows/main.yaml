name: CI-CD

on:
  push:
    branches:
      - main
    tags: []
  pull_request:
  
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.17

      - name: Check out code
        uses: actions/checkout@v1

      - name: Lint Go Code
        uses: golangci/golangci-lint-action@v2
        with:
          go-version: 1.17
          args: -E gofmt
          
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.17

      - name: Check out code
        uses: actions/checkout@v1

      - name: Run Unit tests.
        run: make test-coverage

  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      backend: "bin/backend"
    needs: [lint, test]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.17

      - name: Check out code
        uses: actions/checkout@v1

      - name: Build
        run: make build
    
  run:
    name: Run
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.17

      - name: Check out code
        uses: actions/checkout@v1

      - name: Build
        run: make run

  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          cd frontend && npm install && cd ..

      - name: Build
        run: |
          cd frontend && npm run build --prod